app.py implements a Flask web application for tracking user health metrics such as sleep, physical activity, and calorie intake. 
It includes user authentication, data logging, and score calculation functionalities.

Authors:
    Prayas Sinha, Aritro Shome

Classes:
    User: A class representing a user, inheriting from UserMixin for Flask-Login integration.

Functions:
    calculate_sleep_score(email):
        Calculates the sleep score for a user based on their logged sleep data.

    calculate_physical_activity_score(email):
        Calculates the physical activity score for a user based on their logged exercise data.

    calculate_calories_score(email):
        Calculates the calorie intake score for a user based on their logged food data.

    calculate_mentl_score(email):
        Calculates the overall health score for a user by averaging sleep, physical activity, and calorie scores.

    signup():
        Handles user signup by creating a new user document in the Firestore database.

    login():
        Handles user login by verifying credentials and logging in the user.

    home():
        Renders the home page.

    user_loader(email):
        Loads a user from the Firestore database for Flask-Login.

    log_sleep():
        Logs sleep data for the current user.

    log_physical_activity():
        Logs physical activity data for the current user.

    log_food():
        Logs food data (calories) for the current user.

    log_journalling():
        Logs journaling content for the current user.

    fetch_data(category):
        Fetches data for a specified category (sleep, physical activity, food, journals) for the current user.

    send_login_page():
        Renders the login page.

    send_dashboard_page():
        Renders the dashboard page with health scores.

    send_articles_page():
        Renders the articles page.

    send_aboutus_page():
        Renders the about us page.

    send_community_page():
        Placeholder for rendering the community page.

    getJourns():
        Fetches and renders the journaling data for the current user.

    send_journalling_page():
        Renders the journaling page with the current day's journal content if available.

Global Variables:
    app: The Flask application instance.
    login_manager: The Flask-Login manager instance.
    db: The Firestore database client instance.
